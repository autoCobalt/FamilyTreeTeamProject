import java.util.*;

public class GraphType<E> {
    //Global Variables
    HashMap<E,Person> familyTree; //key=personID, value=Person object
    int personCount; //number of people in the graph
    int relationCount; //number of relationships between people

    //Default Constructor
    public GraphType() {
        personCount=0;
        relationCount=0;
        familyTree=new HashMap<E,Person>();
    }

    //Adds a new vertex to the graph
    public void addPerson(E personID) {
        if (!familyTree.containsKey(personID)) { //prevents duplicates
            familyTree.put(personID,new Person());
            personCount++;
        }
    }
    public Person getPerson(E personID) {
        return (familyTree.get(personID));
    }
    public Partnership addPartnership(E rID) {

    }
    public Partnership getPartnership(E rID) {

    }

    //Adds parent-child relationship
    public void addParent_Child(Person parent, Person child) {
        child.setRelationship("Parent",parent);
        parent.setRelationship("Child",child);

    }

    //Checks if there is an edge between the two specified vertices, returns the type of relationship
    //public String hasRelationship(Person p1,Person p2) {
    //    for (p1.getRelationship().keySet() : p1.getRelationship().entrySet()) {
    //
    //    }
    //}




}