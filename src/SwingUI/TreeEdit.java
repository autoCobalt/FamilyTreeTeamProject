package SwingUI;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

public class TreeEdit {
    private JPanel TreeEdit;
    private JButton addPerson;
    private JButton addRelationship;
    private JButton removePerson;
    private JButton editRelationship;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        TreeEdit = new JPanel();
        TreeEdit.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(6, 1, new Insets(0, 0, 0, 0), -1, -1));
        TreeEdit.setBackground(new Color(-5997967));
        TreeEdit.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16777216)), "Edit Tree", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.BELOW_TOP, this.$$$getFont$$$("Consolas", Font.BOLD, 20, TreeEdit.getFont()), new Color(-16777216)));
        addPerson = new JButton();
        addPerson.setBackground(new Color(-2960686));
        Font addPersonFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, addPerson.getFont());
        if (addPersonFont != null) addPerson.setFont(addPersonFont);
        addPerson.setText("Add Person");
        addPerson.setToolTipText("Add a new person to the existing tree");
        TreeEdit.add(addPerson, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        addRelationship = new JButton();
        addRelationship.setBackground(new Color(-2960686));
        Font addRelationshipFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, addRelationship.getFont());
        if (addRelationshipFont != null) addRelationship.setFont(addRelationshipFont);
        addRelationship.setText("Add Relationship");
        addRelationship.setToolTipText("Add a new relationship between two existing people");
        TreeEdit.add(addRelationship, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        removePerson = new JButton();
        removePerson.setBackground(new Color(-2960686));
        Font removePersonFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, removePerson.getFont());
        if (removePersonFont != null) removePerson.setFont(removePersonFont);
        removePerson.setText("Remove Person");
        removePerson.setToolTipText("Remove an existing person from the tree");
        TreeEdit.add(removePerson, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        editRelationship = new JButton();
        editRelationship.setBackground(new Color(-2960686));
        Font editRelationshipFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, editRelationship.getFont());
        if (editRelationshipFont != null) editRelationship.setFont(editRelationshipFont);
        editRelationship.setText("Edit Relationship");
        editRelationship.setToolTipText("Change the status of an existing relationship");
        TreeEdit.add(editRelationship, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        TreeEdit.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        TreeEdit.add(spacer2, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return TreeEdit;
    }
}
